require("dotenv").config();
const TelegramBot = require("node-telegram-bot-api");
const axios = require("axios");

const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, { polling: true });

const express = require("express");
const app = express();

// –î–æ–±–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
app.get("/", (req, res) => {
    res.send("Telegram Bot is running!");
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–º Render
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
    console.log(`Server is running on port ${PORT}`);
});

let newsEnabled = true; // –§–ª–∞–≥ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π

const ADMIN_CHAT_ID = process.env.ADMIN_CHAT_ID;
const userRequests = {}; // –•—Ä–∞–Ω–∏–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

const faq = [
    {
        id: 0,
        summary: "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω–æ –ø–æ–¥–∞—Ç—å?",
        details: "–ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã: –∞—Ç—Ç–µ—Å—Ç–∞—Ç –æ–± –æ–∫–æ–Ω—á–∞–Ω–∏–∏ —Å—Ä–µ–¥–Ω–µ–π —à–∫–æ–ª—ã –∏–ª–∏ —Å–ø—Ä–∞–≤–∫—É –æ–± –æ–±—É—á–µ–Ω–∏–∏, –∫–æ–ø–∏—é –ø–∞—Å–ø–æ—Ä—Ç–∞, —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ 3x4 —Å–º (4-6 —à—Ç), –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ - –¥–æ–∫—É–º–µ–Ω—Ç—ã, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é—â–∏–µ –ª—å–≥–æ—Ç—ã"
    },
    {
        id: 1,
        summary: "–ö–∞–∫ –ø–æ–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã?",
        details: "–î–æ–∫—É–º–µ–Ω—Ç—ã –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å –ª–∏—á–Ω–æ –≤ –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏ –ª–∏–±–æ —á–µ—Ä–µ–∑ –ì–æ—Å—É—Å–ª—É–≥–∏"
    },
    {
        id: 2,
        summary: "–ö–∞–∫ —É–∑–Ω–∞—Ç—å –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è?",
        details: "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –Ω–∞ —Å–∞–π—Ç–µ –∏ –≤ –≥—Ä—É–ø–ø–µ –≤ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ"
    },
    {
        id: 3,
        summary: "–ö–æ–≥–¥–∞ –±—É–¥—É—Ç –æ–±—ä—è–≤–ª–µ–Ω—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã?",
        details: "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö —É–∑–Ω–∞—ë—Ç–µ –≤ –¥–µ–Ω—å –≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã—Ö. –ê –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –Ω–µ –ø–æ–∑–∂–µ 19 –∞–≤–≥—É—Å—Ç–∞"
    },
    {
        id: 4,
        summary: "–ö–æ–≥–¥–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –¥–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π?",
        details: "–ö–æ–ª–ª–µ–∫—Ç–∏–≤ –ì–ê–ü–û–£ \"–¢–µ—Ç—é—à—Å–∫–∏–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–ª–ª–µ–¥–∂ –≥—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–π –∑–∞—â–∏—Ç—ã\" –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –≤—Å–µ—Ö –∂–µ–ª–∞—é—â–∏—Ö –Ω–∞ –¥–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Å—Ç–æ–∏—Ç—Å—è 26 –∞–ø—Ä–µ–ª—è"
    }
]

const timelineData = [
    {
        step: 1,
        title: "–ü–æ–¥–∞—á–∞ –∑–∞—è–≤–ª–µ–Ω–∏—è –∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤",
        description:
            "–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–∏–µ–º–Ω—É—é –∫–æ–º–∏—Å—Å–∏—é –∏–ª–∏ –ì–æ—Å—É—Å–ª—É–≥–∏. –ü—Ä–∏–ª–æ–∂–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –≤–∫–ª—é—á–∞—è –ø–∞—Å–ø–æ—Ä—Ç, –¥–æ–∫—É–º–µ–Ω—Ç –æ–± –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ ‚Äî —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ö.",
    },
    {
        step: 2,
        title: "–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è",
        description:
            "–í—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–µ —ç–∫–∑–∞–º–µ–Ω—ã –ø—Ä–æ–≤–æ–¥—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º ‚Äú–ó–ß–°‚Äù, ‚Äú–ü–ë‚Äù –∏ ‚Äú–§–ö‚Äù –≤ –≤–∏–¥–µ —Å–¥–∞—á–∏ –Ω–æ—Ä–º–∞—Ç–∏–≤–æ–≤ –ø–æ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ, –µ–∂–µ–≥–æ–¥–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—ã—Ö —É—á–µ–±–Ω—ã–º –∑–∞–≤–µ–¥–µ–Ω–∏–µ–º. –î–ª—è –ø—Ä–æ–≥—Ä–∞–º–º—ã ‚Äú–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –ß–°‚Äù –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.",
    },
    {
        step: 3,
        title: "–ó–∞—á–∏—Å–ª–µ–Ω–∏–µ –≤ –∫–æ–ª–ª–µ–¥–∂",
        description:
            "–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –∏—Å–ø—ã—Ç–∞–Ω–∏–π –∑–∞—è–≤–∫–∏ —Ä–∞–Ω–∂–∏—Ä—É—é—Ç—Å—è, –∏ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è —Å–ø–∏—Å–∫–∏ –∑–∞—á–∏—Å–ª–µ–Ω–Ω—ã—Ö. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –Ω–∞ –±—é–¥–∂–µ—Ç–Ω—ã–µ –º–µ—Å—Ç–∞.",
    },
];

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–æ–º–∞–Ω–¥
bot.onText(/\/start/, (msg) => {
    bot.sendMessage(msg.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É:", {
        reply_markup: {
            keyboard: [
                ["üì∞ –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏"],
                ["‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã"],
                ["üéì –ö–∞–∫ –ø–æ—Å—Ç—É–ø–∏—Ç—å"],
                ["üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "‚úâÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏"],
            ],
            resize_keyboard: true,
        },
    });
});

bot.on("message", async (msg) => {
    const chatId = msg.chat.id;
    const text = msg.text;
    const faq = await getFAQ();
    const steps = await getAdmissionSteps();

    if (text === "üì∞ –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏") {
        newsEnabled = !newsEnabled;
        bot.sendMessage(chatId, newsEnabled ? "‚úÖ –ù–æ–≤–æ—Å—Ç–∏ –≤–∫–ª—é—á–µ–Ω—ã!" : "‚ùå –ù–æ–≤–æ—Å—Ç–∏ –æ—Ç–∫–ª—é—á–µ–Ω—ã!");
    }

    if (text === "‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã") {
        try {
            const faq = await getFAQ();
            const message = faq && faq.trim() !== ""
                ? `üìã <b>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</b>\n\n${faq}`
                : "FAQ –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã.";
            bot.sendMessage(chatId, message, { parse_mode: "HTML" });
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ FAQ:", error);
            bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ FAQ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
    }

    if (text === "üéì –ö–∞–∫ –ø–æ—Å—Ç—É–ø–∏—Ç—å") {
        try {
            const steps = getAdmissionSteps();
            if (!steps || steps.trim() === "") {
                await bot.sendMessage(chatId, "–®–∞–≥–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã. üòî");
                return;
            }

            const messageHeader = `üéì **–ö–∞–∫ –ø–æ—Å—Ç—É–ø–∏—Ç—å –≤ –∫–æ–ª–ª–µ–¥–∂** üéì\n\n`;
            const maxMessageLength = 4096 - messageHeader.length;
            let currentMessage = messageHeader;

            const stepItems = steps.split("\n\n");
            for (const item of stepItems) {
                if ((currentMessage + item).length > maxMessageLength) {
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤–æ–µ
                    await bot.sendMessage(chatId, currentMessage, { parse_mode: "Markdown" });
                    currentMessage = messageHeader;
                }
                currentMessage += `${item}\n\n`;
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ
            if (currentMessage.trim() !== messageHeader.trim()) {
                await bot.sendMessage(chatId, currentMessage, { parse_mode: "Markdown" });
            }
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —à–∞–≥–æ–≤ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è:", error);
            await bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —à–∞–≥–æ–≤ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. üòî");
        }
    }

    if (text === "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã") {
        try {
            const contactInfo = `üìç **–ê–¥—Ä–µ—Å:** 422370, –≥. –¢–µ—Ç—é—à–∏, —É–ª. –§—Ä—É–Ω–∑–µ, –¥. 23\n\n` +
                `üìû **–¢–µ–ª–µ—Ñ–æ–Ω—ã:**\n+7(843)-732-56-36\n+7(843)-732-56-10\n\n` +
                `üìß **–ü–æ—á—Ç–∞:** [tetushi-tpu@mail.ru](mailto:tetushi-tpu@mail.ru)\n\n` +
                `‚è∞ **–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:**\n–ü–Ω-–ü—Ç ‚Äî 8:00-16:00\n–°–± ‚Äî 8:00-14:00\n–í—Å ‚Äî –í—ã—Ö–æ–¥–Ω–æ–π\n\n` +
                `üåê **–°–∞–π—Ç:** [tetushi-tpu.ru](https://tetushi-tpu.ru/)\n\n` +
                `üì± **–í–ö–æ–Ω—Ç–∞–∫—Ç–µ:** [vk.com/club66275709](https://vk.com/club66275709)`;

            await bot.sendMessage(chatId, `üì≤ **–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è** üì≤\n\n${contactInfo}`, { parse_mode: "Markdown" });
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏:", error);
            await bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. üòî");
        }
    }

    if (text === "‚úâÔ∏è –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏") {
        bot.sendMessage(chatId, "‚úç –ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –∏ –º—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!");
        userRequests[chatId] = true; // –§–∏–∫—Å–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—Ç —Å–≤—è–∑–∞—Ç—å—Å—è
    } else if (userRequests[chatId]) {
        // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        bot.sendMessage(ADMIN_CHAT_ID, `üì© –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (@${msg.from.username}):\n"${text}"`, {
            reply_markup: {
                inline_keyboard: [
                    [{ text: "–û—Ç–≤–µ—Ç–∏—Ç—å", callback_data: `reply_${chatId}` }],
                ],
            },
        });

        bot.sendMessage(chatId, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú—ã —Å–∫–æ—Ä–æ –æ—Ç–≤–µ—Ç–∏–º.");
        userRequests[chatId] = false;
    }

    if (text === "–ø—Ä–∏–≤–µ—Ç") {
        bot.sendMessage(chatId, "–ü—Ä–∏–≤–µ—Ç! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?");
    }
});

bot.on("callback_query", (query) => {
    const chatId = query.message.chat.id;
    const data = query.data;

    if (data.startsWith("reply_")) {
        const userId = data.split("_")[1];
        bot.sendMessage(chatId, `‚úç –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:`);

        bot.once("message", (msg) => {
            bot.sendMessage(userId, `üì© –û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:\n"${msg.text}"`);
            bot.sendMessage(chatId, "‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!");
        });
    }
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ VK
async function getLatestNews() {
    if (!newsEnabled) return null;

    try {
        const response = await axios.get(
            `https://api.vk.com/method/wall.get`,
            {
                params: {
                    access_token: process.env.VK_ACCESS_TOKEN,
                    owner_id: `-${process.env.VK_GROUP_ID}`,
                    count: 5, // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ—Å—Ç–æ–≤
                    v: "5.131",
                },
            }
        );

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
        if (!response.data || !response.data.response || !response.data.response.items) {
            console.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç VK API:", response.data);
            return null;
        }

        const posts = response.data.response.items;
        if (posts.length === 0) return null;

        // –ú–∞—Å—Å–∏–≤ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        const results = [];

        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –ø–æ—Å—Ç
        for (const post of posts) {
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Ä–µ–ø–æ—Å—Ç—ã –∏ —Ä–µ–∫–ª–∞–º–Ω—ã–µ –ø–æ—Å—Ç—ã
            if (post.marked_as_ads || post.copy_history) continue;

            // –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Å—Ç–µ
            const postInfo = {
                id: post.id,
                text: post.text ? post.text.substring(0, 250) + (post.text.length > 250 ? "..." : "") : "",
                date: post.date,
                link: `https://vk.com/wall-${process.env.VK_GROUP_ID}_${post.id}`,
                images: [],
                videos: [],
                docs: []
            };

            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–ª–æ–∂–µ–Ω–∏—è
            if (post.attachments && post.attachments.length > 0) {
                post.attachments.forEach(attachment => {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
                    if (attachment.type === "photo" && attachment.photo) {
                        const sizes = attachment.photo.sizes;
                        if (sizes && sizes.length > 0) {
                            // –í—ã–±–∏—Ä–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ –±–æ–ª—å—à–æ–π, –Ω–æ –Ω–µ —Å–ª–∏—à–∫–æ–º)
                            let bestSize = null;
                            // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è X, Y, —Ä–∞–∑–º–µ—Ä–æ–≤ (800-1000px)
                            ["x", "y", "z", "w", "r", "q", "p", "o", "m", "s"].some(sizeType => {
                                bestSize = sizes.find(size => size.type === sizeType);
                                return bestSize !== undefined;
                            });

                            // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –ø–æ —Ç–∏–ø—É, –±–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π (–æ–±—ã—á–Ω–æ —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π)
                            if (!bestSize && sizes.length > 0) {
                                bestSize = sizes[sizes.length - 1];
                            }

                            if (bestSize) {
                                postInfo.images.push(bestSize.url);
                            }
                        }
                    }
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
                    else if (attachment.type === "video" && attachment.video) {
                        const video = attachment.video;
                        if (video.image) {
                            // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–≤—å—é –≤–∏–¥–µ–æ
                            const images = video.image;
                            if (images && images.length > 0) {
                                postInfo.videos.push({
                                    title: video.title || "–í–∏–¥–µ–æ",
                                    preview: images[images.length - 1].url,
                                    link: `https://vk.com/video-${process.env.VK_GROUP_ID}_${video.id}`
                                });
                            }
                        }
                    }
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                    else if (attachment.type === "doc" && attachment.doc) {
                        const doc = attachment.doc;
                        postInfo.docs.push({
                            title: doc.title,
                            url: doc.url,
                            size: doc.size
                        });
                    }
                });
            }

            results.push(postInfo);
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ—Å—Ç–æ–≤
        return results.length > 0 ? results : null;

    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –í–ö:", error);
        if (error.response) {
            console.error("–î–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–∞:", error.response.data);
        }
        return null;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ —Ç–µ–ª–µ–≥—Ä–∞–º
async function sendNewsToUsers(chatIds) {
    try {
        const news = await getLatestNews();
        if (!news || news.length === 0) {
            console.log("–ù–µ—Ç –Ω–æ–≤—ã—Ö –ø–æ—Å—Ç–æ–≤ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏");
            return;
        }

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (–∏–∑–º–µ–Ω–µ–Ω–æ —Å 3 –Ω–∞ 5)
        const postsToSend = news.slice(0, 5);

        for (const chatId of chatIds) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —á–∞—Ç –∞–∫—Ç–∏–≤–µ–Ω –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏
            // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –∏–∑ –ë–î

            for (const post of postsToSend) {
                // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                const messageText = `üì∞ *–ù–æ–≤–æ—Å—Ç—å:*\n\n${post.text}\n\n[–ß–∏—Ç–∞—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é](${post.link})`;

                // –ï—Å–ª–∏ –µ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –Ω–∏–º–∏
                if (post.images && post.images.length > 0) {
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                    const imagesToSend = post.images.slice(0, 5);

                    if (imagesToSend.length === 1) {
                        // –û–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å –ø–æ–¥–ø–∏—Å—å—é
                        await bot.sendPhoto(chatId, imagesToSend[0], {
                            caption: messageText,
                            parse_mode: "Markdown"
                        });
                    } else {
                        // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç
                        await bot.sendMessage(chatId, messageText, { parse_mode: "Markdown" });

                        // –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞–∫ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É
                        const mediaGroup = imagesToSend.map(image => ({
                            type: 'photo',
                            media: image
                        }));

                        await bot.sendMediaGroup(chatId, mediaGroup);
                    }
                } else if (post.videos && post.videos.length > 0) {
                    // –ï—Å–ª–∏ –µ—Å—Ç—å –≤–∏–¥–µ–æ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é —Å –ø–æ–¥–ø–∏—Å—å—é
                    const video = post.videos[0];
                    await bot.sendPhoto(chatId, video.preview, {
                        caption: `${messageText}\n\n*–í–∏–¥–µ–æ:* ${video.title}\n[–°–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ](${video.link})`,
                        parse_mode: "Markdown"
                    });
                } else {
                    // –ï—Å–ª–∏ –Ω–µ—Ç –º–µ–¥–∏–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—Å—Ç
                    await bot.sendMessage(chatId, messageText, { parse_mode: "Markdown" });
                }

                // –î–µ–ª–∞–µ–º –ø–∞—É–∑—É –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π Telegram
                await new Promise(resolve => setTimeout(resolve, 1000));
            }
        }

        console.log(`–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${postsToSend.length} –Ω–æ–≤–æ—Å—Ç–µ–π ${chatIds.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º`);
    } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π:", error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏
async function getNewsSubscribers() {
    return [123456789]; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID —á–∞—Ç–æ–≤
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π
async function broadcastNews() {
    if (!newsEnabled) {
        console.log("–†–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç–∫–ª—é—á–µ–Ω–∞");
        return;
    }

    const subscribers = await getNewsSubscribers();
    if (subscribers.length === 0) {
        console.log("–ù–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ –Ω–æ–≤–æ—Å—Ç–∏");
        return;
    }

    await sendNewsToUsers(subscribers);
}

async function getFAQ() {
    if (!faq || faq.length === 0) {
        return "";
    }
    return faq.map(item => {
        return `${item.id + 1}. <b>${item.summary}</b>\n${item.details}`;
    }).join("\n\n");
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —à–∞–≥–æ–≤ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
function getAdmissionSteps() {
    if (!timelineData || timelineData.length === 0) {
        return "";
    }
    return timelineData.map(item => {
        return `üìå **–®–∞–≥ ${item.step}: ${item.title}**\n${item.description}`;
    }).join("\n\n");
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω–æ)
setInterval(() => {
    broadcastNews().catch(error => {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π:", error);
    });
}, 3 * 60 * 60 * 1000); // 6 —á–∞—Å–æ–≤ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...");
